mutate(meters_per_sec = distance / elapsed_time)
# removes country data that has unusable country data
focus.data <- focus.data[-c(786, 1281, 1345, 10, 1366, 1441, 506, 139, 809, 1217, 1447, 1742, 1266, 1226, 1189), ]
# gets the iso3 codes for each athlete's country for mapping
codes <- focus.data$athlete.country
athlete.countries <- countrycode(codes, 'country.name', 'iso3c')
focus.data$iso3c <- athlete.countries
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = seq(1, nrow(focus.data)))
locmap <- joinCountryData2Map(locdf, joinCode = "ISO3", nameJoinColumn = "country")
# gets separates the data for male and female omitting any variables that are blank
female.data <- filter(focus.data, athlete.sex == "F")
male.data <- filter(focus.data, athlete.sex == "M")
write.csv(focus.data, file = "focus_data.csv")
write.csv(female.data, file = "female_data.csv")
write.csv(male.data, file = "male_data.csv")
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
library(sqldf)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
focus.data <- read.csv("focus_data.csv", stringsAsFactors = FALSE)
female.data <- read.csv("female_data.csv", stringsAsFactors = FALSE)
male.data <- read.csv("male_data.csv", stringsAsFactors = FALSE)
# function to calculate the mode of data
mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# gets the average speed among all females
female.average.speed <- round(mean(female.data$average_speed), 2)
# gets the median speed among all females
female.median.speed <- round(median(female.data$average_speed), 2)
# gets the mode speed among all females
female.mode.speed <- round(mode(female.data$average_speed), 2)
# gets the range of speed among all females
female.range.speed <- range(female.data$average_speed)
# gets the average meters/sec for females
female.average.m.s <- round(mean(female.data$meters_per_sec), 2)
# gets the average heart rate for females during activity
female.heart.rate <- round(mean(female.data$average_heartrate), 2)
# gets the average distance for one lap (females)
female.average.distance <- round(mean(female.data$distance), 2)
# gets the median distance for one lap (females)
female.median.distance <- round(median(female.data$distance), 2)
# gets the mode distance for one lap (females)
female.mode.distance <- round(mode(female.data$distance), 2)
# gets the average speed among all males
male.average.speed <- round(mean(male.data$average_speed), 2)
# gets the median speed among all males
male.median.speed <- round(median(male.data$average_speed), 2)
# gets the mode speed among all males
male.mode.speed <- round(mode(male.data$average_speed), 2)
# gets the range of speed among all males
male.range.speed <- range(male.data$average_speed)
# gets the average meters/sec for males
male.average.m.s <- round(mean(male.data$meters_per_sec), 2)
# gets the average heart rate for males during activity
male.heart.rate <- round(mean(male.data$average_heartrate), 2)
# gets the average distance for one lap (males)
male.average.distance <- round(mean(male.data$distance), 2)
# gets the median distance for one lap (females)
male.median.distance <- round(median(male.data$distance), 2)
# gets the mode distance for one lap (females)
male.mode.distance <- round(mode(male.data$distance), 2)
country.counts <- order(locdf, locdf$Frequencies)
country.counts <- unique(locdf)
View(country.counts)
cleanlocdf <- aggregate(x = locdf, na.rm = TRUE)
cleanlocdf <- aggregate(locdf, na.rm = TRUE)
cleanlocdf <- aggregate(locdf, by = list(name = locdf$country) na.rm = TRUE)
cleanlocdf <- aggregate(locdf, by = list(name = locdf$country), na.rm = TRUE)
cleanlocdf <- aggregate.data.frame(locdf, by = list(name = locdf$country), na.rm = TRUE)
cleanlocdf <- aggregate.data.frame(locdf, by = list(name = locdf$country), FUN = "sum", na.rm = TRUE)
cleanlocdf <- group_by(locdf, country) %>%
summarize(
name = country
sum = sum(Frequencies)
)
cleanlocdf <- group_by(locdf, country) %>%
summarize(
name = country,
sum = sum(Frequencies)
)
cleanlocdf <- group_by(locdf, country) %>%
summarize(
name = locdf$country,
sum = sum(Frequencies)
)
cleanlocdf <- group_by(locdf, country) %>%
summarize(
name = country,
sum = sum(Frequencies)
)
cleanlocdf <- group_by(locdf, country) %>%
summarize(
sum = sum(Frequencies)
)
View(cleanlocdf)
View(cleanlocdf)
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = seq(1, nrow(focus.data)), na.rm = TRUE)
cleanlocdf <- group_by(locdf, country) %>%
summarize(
sum = sum(Frequencies)
)
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = seq(1, nrow(focus.data)))
cleanlocdf <- group_by(locdf, country) %>%
summarize(
sum = sum(Frequencies)
)
na.omit(cleanlocdf)
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
# distance is in meters, speed in m/s, both for 1 lap
# gathers the columns of data for sex, distance per lap and speed per lap while getting rid of entries that are missing or with values of 0
focus.data <- select(data, athlete.sex, distance, elapsed_time, average_speed, type, average_heartrate, athlete.country) %>%
filter(athlete.sex != " ") %>%
filter(distance > 0.0) %>%
filter(average_speed > 0.0) %>%
filter(average_heartrate > 0.0) %>%
filter(elapsed_time > 0.0) %>%
filter(athlete.country != "") %>%
mutate(meters_per_sec = distance / elapsed_time)
# removes country data that has unusable country data
focus.data <- focus.data[-c(786, 1281, 1345, 10, 1366, 1441, 506, 139, 809, 1217, 1447, 1742, 1266, 1226, 1189), ]
# gets the iso3 codes for each athlete's country for mapping
codes <- focus.data$athlete.country
athlete.countries <- countrycode(codes, 'country.name', 'iso3c')
focus.data$iso3c <- athlete.countries
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = seq(1, nrow(focus.data)))
# groups the country data by country and frequencies
cleanlocdf <- group_by(locdf, country) %>%
summarize(
sum = sum(Frequencies)
)
locmap <- joinCountryData2Map(cleanlocdf, joinCode = "ISO3", nameJoinColumn = "country")
# gets separates the data for male and female omitting any variables that are blank
female.data <- filter(focus.data, athlete.sex == "F")
male.data <- filter(focus.data, athlete.sex == "M")
write.csv(focus.data, file = "focus_data.csv")
write.csv(female.data, file = "female_data.csv")
write.csv(male.data, file = "male_data.csv")
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
focus.data <- read.csv("focus_data.csv", stringsAsFactors = FALSE)
female.data <- read.csv("female_data.csv", stringsAsFactors = FALSE)
male.data <- read.csv("male_data.csv", stringsAsFactors = FALSE)
par(mfrow = c(1 ,2))
# linear regression of female distance per lap and speed per lap
plot(female.data$distance, female.data$average_speed, main = "Female Speed & Distance\n Linear Regression",
xlab = "Distance of One Lap (Meters)", ylab = "Average Speed", col = "blue", xlim = c(0, 10000), ylim = c(0, 12),
abline(lm(female.data$average_speed~female.data$distance)))
# linear regression of male distance per lap and speed per lap
plot(male.data$distance, male.data$average_speed, main = "Male Speed & Distance\n Linear Regression",
xlab = "Distance of One Lap (Meters)", ylab = "Average Speed", col = "blue", xlim = c(0, 10000), ylim = c(0, 12),
abline(lm(male.data$average_speed~male.data$distance)))
# histogram of female average speed
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$average_speed), bins = 20) +
labs(title = "Distribution of Average Speed for Females (1 Lap)", x = "Speed (Meters)", y = "Frequency")
# histogram of male average speed
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$average_speed), bins = 20) +
labs(title = "Distribution of Average Speed for Males (1 Lap)", x = "Speed (Meters)", y = "Frequency")
# histogram of female distance
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Females (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# histogram of male distance
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Males (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# creates a bar graph that shows ride is the most freq activity for females
ggplot(data = female.data) +
geom_bar(mapping = aes(x = type, fill = type), show.legend = FALSE) +
labs(title = "Frequency of Activity for Females", x = "Activity", y = "Count")
# creates a bar graph that shows ride is the most freq activity for males
ggplot(data = male.data) +
geom_bar(mapping = aes(x = type, fill = type), show.legend = FALSE) +
labs(title = "Frequency of Activity for Males", x = "Activity", y = "Count")
# maps the countries with athletes and their frequencies
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
mapCountryData(locmap, nameColumnToPlot = "sum", catMethod = "quantiles", missingCountryCol = gray(.9))
# maps the countries with athletes and their frequencies
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "sum", catMethod = "quantiles", missingCountryCol = gray(.9))
# groups the country data by country and frequencies
cleanlocdf <- group_by(locdf, country) %>%
summarize(
Frequencies = sum(Frequencies)
)
locmap <- joinCountryData2Map(cleanlocdf, joinCode = "ISO3", nameJoinColumn = "country")
# maps the countries with athletes and their frequencies
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "sum", catMethod = "quantiles", missingCountryCol = gray(.9))
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
# removes rows with NA values
cleanlocdf <- cleanlocdf[-c(66)]
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
# distance is in meters, speed in m/s, both for 1 lap
# gathers the columns of data for sex, distance per lap and speed per lap while getting rid of entries that are missing or with values of 0
focus.data <- select(data, athlete.sex, distance, elapsed_time, average_speed, type, average_heartrate, athlete.country) %>%
filter(athlete.sex != " ") %>%
filter(distance > 0.0) %>%
filter(average_speed > 0.0) %>%
filter(average_heartrate > 0.0) %>%
filter(elapsed_time > 0.0) %>%
filter(athlete.country != "") %>%
mutate(meters_per_sec = distance / elapsed_time)
# removes country data that has unusable country data
focus.data <- focus.data[-c(786, 1281, 1345, 10, 1366, 1441, 506, 139, 809, 1217, 1447, 1742, 1266, 1226, 1189), ]
# gets the iso3 codes for each athlete's country for mapping
codes <- focus.data$athlete.country
athlete.countries <- countrycode(codes, 'country.name', 'iso3c')
focus.data$iso3c <- athlete.countries
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = seq(1, nrow(focus.data)))
# groups the country data by country and frequencies
cleanlocdf <- group_by(locdf, country) %>%
summarize(
Frequencies = sum(Frequencies)
)
# removes rows with NA values
cleanlocdf <- cleanlocdf[-c(66)]
locmap <- joinCountryData2Map(cleanlocdf, joinCode = "ISO3", nameJoinColumn = "country")
# gets separates the data for male and female omitting any variables that are blank
female.data <- filter(focus.data, athlete.sex == "F")
male.data <- filter(focus.data, athlete.sex == "M")
write.csv(focus.data, file = "focus_data.csv")
write.csv(female.data, file = "female_data.csv")
write.csv(male.data, file = "male_data.csv")
# removes rows with NA values
cleanlocdf <- cleanlocdf[-c(3)]
# removes rows with NA values
cleanlocdf <- cleanlocdf[-c(3)]
# removes rows with NA values
cleanlocdf <- filter(cleanlocdf, country != " ")
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
# distance is in meters, speed in m/s, both for 1 lap
# gathers the columns of data for sex, distance per lap and speed per lap while getting rid of entries that are missing or with values of 0
focus.data <- select(data, athlete.sex, distance, elapsed_time, average_speed, type, average_heartrate, athlete.country) %>%
filter(athlete.sex != " ") %>%
filter(distance > 0.0) %>%
filter(average_speed > 0.0) %>%
filter(average_heartrate > 0.0) %>%
filter(elapsed_time > 0.0) %>%
filter(athlete.country != "") %>%
mutate(meters_per_sec = distance / elapsed_time)
# removes country data that has unusable country data
focus.data <- focus.data[-c(786, 1281, 1345, 10, 1366, 1441, 506, 139, 809, 1217, 1447, 1742, 1266, 1226, 1189), ]
# gets the iso3 codes for each athlete's country for mapping
codes <- focus.data$athlete.country
athlete.countries <- countrycode(codes, 'country.name', 'iso3c')
focus.data$iso3c <- athlete.countries
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = seq(1, nrow(focus.data)))
# groups the country data by country and frequencies
cleanlocdf <- group_by(locdf, country) %>%
summarize(
Frequencies = sum(Frequencies)
)
# removes rows with NA values
cleanlocdf <- filter(cleanlocdf, country != " ")
locmap <- joinCountryData2Map(cleanlocdf, joinCode = "ISO3", nameJoinColumn = "country")
# gets separates the data for male and female omitting any variables that are blank
female.data <- filter(focus.data, athlete.sex == "F")
male.data <- filter(focus.data, athlete.sex == "M")
write.csv(focus.data, file = "focus_data.csv")
write.csv(female.data, file = "female_data.csv")
write.csv(male.data, file = "male_data.csv")
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
focus.data <- read.csv("focus_data.csv", stringsAsFactors = FALSE)
female.data <- read.csv("female_data.csv", stringsAsFactors = FALSE)
male.data <- read.csv("male_data.csv", stringsAsFactors = FALSE)
par(mfrow = c(1 ,2))
# linear regression of female distance per lap and speed per lap
plot(female.data$distance, female.data$average_speed, main = "Female Speed & Distance\n Linear Regression",
xlab = "Distance of One Lap (Meters)", ylab = "Average Speed", col = "blue", xlim = c(0, 10000), ylim = c(0, 12),
abline(lm(female.data$average_speed~female.data$distance)))
# linear regression of male distance per lap and speed per lap
plot(male.data$distance, male.data$average_speed, main = "Male Speed & Distance\n Linear Regression",
xlab = "Distance of One Lap (Meters)", ylab = "Average Speed", col = "blue", xlim = c(0, 10000), ylim = c(0, 12),
abline(lm(male.data$average_speed~male.data$distance)))
# histogram of female average speed
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$average_speed), bins = 20) +
labs(title = "Distribution of Average Speed for Females (1 Lap)", x = "Speed (Meters)", y = "Frequency")
# histogram of male average speed
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$average_speed), bins = 20) +
labs(title = "Distribution of Average Speed for Males (1 Lap)", x = "Speed (Meters)", y = "Frequency")
# histogram of female distance
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Females (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# histogram of male distance
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Males (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# creates a bar graph that shows ride is the most freq activity for females
ggplot(data = female.data) +
geom_bar(mapping = aes(x = type, fill = type), show.legend = FALSE) +
labs(title = "Frequency of Activity for Females", x = "Activity", y = "Count")
# creates a bar graph that shows ride is the most freq activity for males
ggplot(data = male.data) +
geom_bar(mapping = aes(x = type, fill = type), show.legend = FALSE) +
labs(title = "Frequency of Activity for Males", x = "Activity", y = "Count")
# maps the countries with athletes and their frequencies
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
# maps the countries with athletes and their frequencies
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
write.csv(cleanlocdf, file = "country_freq.csv")
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = 1))
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = 1)
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
# distance is in meters, speed in m/s, both for 1 lap
# gathers the columns of data for sex, distance per lap and speed per lap while getting rid of entries that are missing or with values of 0
focus.data <- select(data, athlete.sex, distance, elapsed_time, average_speed, type, average_heartrate, athlete.country) %>%
filter(athlete.sex != " ") %>%
filter(distance > 0.0) %>%
filter(average_speed > 0.0) %>%
filter(average_heartrate > 0.0) %>%
filter(elapsed_time > 0.0) %>%
filter(athlete.country != "") %>%
mutate(meters_per_sec = distance / elapsed_time)
# removes country data that has unusable country data
focus.data <- focus.data[-c(786, 1281, 1345, 10, 1366, 1441, 506, 139, 809, 1217, 1447, 1742, 1266, 1226, 1189), ]
# gets the iso3 codes for each athlete's country for mapping
codes <- focus.data$athlete.country
athlete.countries <- countrycode(codes, 'country.name', 'iso3c')
focus.data$iso3c <- athlete.countries
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = 1)
# groups the country data by country and frequencies
cleanlocdf <- group_by(locdf, country) %>%
summarize(
Frequencies = sum(Frequencies)
)
# removes rows with NA values
cleanlocdf <- filter(cleanlocdf, country != " ")
locmap <- joinCountryData2Map(cleanlocdf, joinCode = "ISO3", nameJoinColumn = "country")
# gets separates the data for male and female omitting any variables that are blank
female.data <- filter(focus.data, athlete.sex == "F")
male.data <- filter(focus.data, athlete.sex == "M")
write.csv(focus.data, file = "focus_data.csv")
write.csv(female.data, file = "female_data.csv")
write.csv(male.data, file = "male_data.csv")
write.csv(cleanlocdf, file = "country_freq.csv")
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
# distance is in meters, speed in m/s, both for 1 lap
# gathers the columns of data for sex, distance per lap and speed per lap while getting rid of entries that are missing or with values of 0
focus.data <- select(data, athlete.sex, distance, elapsed_time, average_speed, type, average_heartrate, athlete.country) %>%
filter(athlete.sex != " ") %>%
filter(distance > 0.0) %>%
filter(average_speed > 0.0) %>%
filter(average_heartrate > 0.0) %>%
filter(elapsed_time > 0.0) %>%
filter(athlete.country != "") %>%
mutate(meters_per_sec = distance / elapsed_time)
# removes country data that has unusable country data
focus.data <- focus.data[-c(786, 1281, 1345, 10, 1366, 1441, 506, 139, 809, 1217, 1447, 1742, 1266, 1226, 1189), ]
# gets the iso3 codes for each athlete's country for mapping
codes <- focus.data$athlete.country
athlete.countries <- countrycode(codes, 'country.name', 'iso3c')
focus.data$iso3c <- athlete.countries
# creates objects for the mapping function
locdf <- data.frame(country = focus.data$iso3c, Frequencies = 1)
# groups the country data by country and frequencies
cleanlocdf <- group_by(locdf, country) %>%
summarize(
Frequencies = sum(Frequencies)
)
# removes rows with NA values
cleanlocdf <- filter(cleanlocdf, country != " ")
locmap <- joinCountryData2Map(cleanlocdf, joinCode = "ISO3", nameJoinColumn = "country")
# gets separates the data for male and female omitting any variables that are blank
female.data <- filter(focus.data, athlete.sex == "F")
male.data <- filter(focus.data, athlete.sex == "M")
write.csv(focus.data, file = "focus_data.csv")
write.csv(female.data, file = "female_data.csv")
write.csv(male.data, file = "male_data.csv")
write.csv(cleanlocdf, file = "country_freq.csv")
# import libraries
library(dplyr)
library(ggplot2)
library(rworldmap)
library(countrycode)
# imports the data
data <- read.csv("strava_activity.csv", stringsAsFactors = FALSE)
focus.data <- read.csv("focus_data.csv", stringsAsFactors = FALSE)
female.data <- read.csv("female_data.csv", stringsAsFactors = FALSE)
male.data <- read.csv("male_data.csv", stringsAsFactors = FALSE)
par(mfrow = c(1 ,2))
# linear regression of female distance per lap and speed per lap
plot(female.data$distance, female.data$average_speed, main = "Female Speed & Distance\n Linear Regression",
xlab = "Distance of One Lap (Meters)", ylab = "Average Speed", col = "blue", xlim = c(0, 10000), ylim = c(0, 12),
abline(lm(female.data$average_speed~female.data$distance)))
# linear regression of male distance per lap and speed per lap
plot(male.data$distance, male.data$average_speed, main = "Male Speed & Distance\n Linear Regression",
xlab = "Distance of One Lap (Meters)", ylab = "Average Speed", col = "blue", xlim = c(0, 10000), ylim = c(0, 12),
abline(lm(male.data$average_speed~male.data$distance)))
# histogram of female average speed
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$average_speed), bins = 20) +
labs(title = "Distribution of Average Speed for Females (1 Lap)", x = "Speed (Meters)", y = "Frequency")
# histogram of male average speed
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$average_speed), bins = 20) +
labs(title = "Distribution of Average Speed for Males (1 Lap)", x = "Speed (Meters)", y = "Frequency")
# histogram of female distance
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Females (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# histogram of male distance
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Males (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# creates a bar graph that shows ride is the most freq activity for females
ggplot(data = female.data) +
geom_bar(mapping = aes(x = type, fill = type), show.legend = FALSE) +
labs(title = "Frequency of Activity for Females", x = "Activity", y = "Count")
# creates a bar graph that shows ride is the most freq activity for males
ggplot(data = male.data) +
geom_bar(mapping = aes(x = type, fill = type), show.legend = FALSE) +
labs(title = "Frequency of Activity for Males", x = "Activity", y = "Count")
# maps the countries with athletes and their frequencies
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
mapDevice("x11")
mapCountryData(locmap, nameColumnToPlot = "Frequencies", catMethod = "quantiles", missingCountryCol = gray(.9))
# histogram of male distance
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Males (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# histogram of female distance
ggplot(data = female.data) +
geom_histogram(mapping = aes(x = female.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Females (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# histogram of male distance
ggplot(data = male.data) +
geom_histogram(mapping = aes(x = male.data$distance), bins = 20) +
labs(title = "Distribution of Distance for Males (1 Lap)", x = "Distance (Meters)", y = "Frequency")
# multiple regression to see the relationships between variables
model <- lm(average_speed~athlete.sex+distance, data = focus.data)
print(model)
# multiple regression to see the relationships between variables
lm(average_speed~athlete.sex+distance, data = focus.data)
# linear regression to see the relationships between variables
lm(average_speed~athlete.sex, data = focus.data)
lm(distance~athlete.sex, data = focus.data)
# multiple regression to see the relationships between variables
lm(average_speed~athlete.sex+distance, data = focus.data)
# linear regression to see the relationships between variables
lm(average_speed~athlete.sex, data = focus.data)
lm(distance~athlete.sex, data = focus.data)
lm(average_speed~athlete.country, data = focus.data)
lm(elapsed_time~athlete.sex, data = focus.data)
lm(average_speed~athlete.sex+type, data = focus.data)
